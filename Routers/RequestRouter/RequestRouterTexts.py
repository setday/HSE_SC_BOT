from Utils.DefaultTexts import button_text_back_to_main_menu

something_went_wrong_text: dict[str, str] = {
    "ru": "‚ùî–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫. –ü–æ–ø—Ä–æ–±—É–π –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∏ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞.",
    "en": "‚ùîSomething went wrong. Try to go back to the main menu and try again.",
}

block_enter_text: dict[str, str] = {
    "ru": "‚ùî–ü–æ –∫–∞–∫–æ–º—É –ø–æ–≤–æ–¥—É –æ–±—Ä–∞—â–µ–Ω–∏–µ?",
    "en": "‚ùîWhat is your request about?",
}

button_text_topics: dict[str, list[tuple[str, str]]] = {
    "ru": [
        ("–ü—Ä–∏—Å—É—Ç—Å—Ç–≤–∏–µ –°—Ç—É–¥—Å–æ–≤–µ—Ç–∞ –Ω–∞ –∞–ø–µ–ª–ª—è—Ü–∏–æ–Ω–Ω–æ–π –∫–æ–º–∏—Å—Å–∏–∏ ‚òéÔ∏è", "ct_app_com"),
        ("–û–±—â–µ–∂–∏—Ç–∏—è –∏–ª–∏ –∫–æ—Ä–ø—É—Å–∞ –í–®–≠ üè°", "ct_cmp_or_drm_prb"),
        ("–û–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å üìñ", "ct_edu_prb"),
        ("–î—Ä—É–≥–æ–µ üíä", "ct_another_prb"),
        ("–¢–≤–æ–∏ –æ–±—Ä–∞—â–µ–Ω–∏—è üëÄ (–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)", "in_dev"),
        button_text_back_to_main_menu["ru"],
    ],
    "en": [
        (
            "Student Council presence at the appeals commission ‚òéÔ∏è",
            "ct_app_com",
        ),
        (
            "Dormitory or HSE campus üè°",
            "ct_cmp_or_drm_prb",
        ),
        (
            "Educational process üìñ",
            "ct_edu_prb",
        ),
        ("Other üíä", "ct_another_prb"),
        ("Your applications üëÄ (in development)", "in_dev"),
        button_text_back_to_main_menu["en"],
    ],
}
button_text_topics_ids: dict[str, int] = {
    key: i for i, (_, key) in enumerate(button_text_topics["ru"])
}

button_text_back_to_topic: dict[str, tuple[str, str]] = {
    "ru": ("–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≤—ã–±–æ—Ä—É —Ç–∏–ø–∞ –æ–±—Ä–∞—â–µ–Ω–∏–πüîô", "bck_to_tpc"),
    "en": ("Back to the request type menuüîô", "bck_to_tpc"),
}

write_campus_or_dormitory_text: dict[str, str] = {
    "ru": "‚ùî–ü–æ –ø–æ–≤–æ–¥—É –∫–∞–∫–æ–≥–æ –∫–æ—Ä–ø—É—Å–∞ –∏–ª–∏ –æ–±—â–µ–∂–∏—Ç–∏—è –æ–±—Ä–∞—â–µ–Ω–∏–µ? –ù–∞–ø–∏—à–∏ –≤ —á–∞—Ç–µ –ø–æ–ª–Ω—ã–π –∞–¥—Ä–µ—Å",
    "en": "‚ùîWhat is your request about? Write the full address in the chat",
}

choose_faculty_text: dict[str, str] = {
    "ru": "‚ùî–° –∫–∞–∫–∏–º —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–æ–º —Å–≤—è–∑–∞–Ω–æ –æ–±—Ä–∞—â–µ–Ω–∏–µ?",
    "en": "‚ùîWhat faculty is your request about?",
}

button_text_faculties: dict[str, list[tuple[str, str]]] = {
    "ru": [
        ("üß¨–®–∫–æ–ª–∞ —Ñ–∏–∑–∏–∫–æ-–º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –∏ –∫–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã—Ö –Ω–∞—É–∫", "cf_spmcs"),
        ("üí∞–®–∫–æ–ª–∞ —ç–∫–æ–Ω–æ–º–∏–∫–∏ –∏ –º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç–∞", "cf_sem"),
        ("üë•–®–∫–æ–ª–∞ —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö –Ω–∞—É–∫", "cf_sss"),
        ("üé≠–®–∫–æ–ª–∞ –≥—É–º–∞–Ω–∏—Ç–∞—Ä–Ω—ã—Ö –Ω–∞—É–∫ –∏ –∏—Å–∫—É—Å—Å—Ç–≤", "cf_sgas"),
        ("üó∫–ò–Ω—Å—Ç–∏—Ç—É—Ç –≤–æ—Å—Ç–æ–∫–æ–≤–µ–¥–µ–Ω–∏—è –∏ –∞—Ñ—Ä–∏–∫–∞–Ω–∏—Å—Ç–∏–∫–∏", "cf_iva"),
        ("üé®–®–∫–æ–ª–∞ –¥–∏–∑–∞–π–Ω–∞", "cf_sd"),
        ("üë®‚Äç‚öñÔ∏è–Æ—Ä–∏–¥–∏—á–µ—Å–∫–∏–π —Ñ–∞–∫—É–ª—å—Ç–µ—Ç", "cf_law"),
        ("üéí–§–∞–∫—É–ª—å—Ç–µ—Ç –¥–æ–≤—É–∑–æ–≤—Å–∫–æ–≥–æ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è", "cf_pie"),
        button_text_back_to_topic["ru"],
    ],
    "en": [
        ("üß¨School of Physics, Mathematics, and Computer Science", "cf_spmcs"),
        ("üí∞School of Economics and Management", "cf_sem"),
        ("üë•School of Social Sciences", "cf_sss"),
        ("üé≠School of Humanities and Arts", "cf_sgas"),
        ("üó∫Institute of Oriental and African Studies", "cf_iva"),
        ("üé®School of Design", "cf_sd"),
        ("üë®‚Äç‚öñÔ∏èFaculty of Law", "cf_law"),
        ("üéíPre-university Education Faculty", "cf_pie"),
        button_text_back_to_topic["en"],
    ],
}
button_text_faculties_ids: dict[str, int] = {
    key: i for i, (_, key) in enumerate(button_text_faculties["ru"])
}

choose_course_text: dict[str, str] = {
    "ru": "‚ùî–° –∫–∞–∫–∏–º –∫—É—Ä—Å–æ–º —Å–≤—è–∑–∞–Ω–æ –æ–±—Ä–∞—â–µ–Ω–∏–µ?",
    "en": "‚ùîWhat course is your request about?",
}

button_text_back_to_faculty: dict[str, tuple[str, str]] = {
    "ru": ("–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≤—ã–±–æ—Ä—É —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–∞ –æ–±—Ä–∞—â–µ–Ω–∏—èüîô", "bck_to_fac"),
    "en": ("Back to the faculty selection menuüîô", "bck_to_fac"),
}
button_text_courses: dict[str, list[tuple[str, str]]] = {
    "ru": [
        ("1Ô∏è‚É£–ü–µ—Ä–≤—ã–π –∫—É—Ä—Å", "cr_1"),
        ("2Ô∏è‚É£–í—Ç–æ—Ä–æ–π –∫—É—Ä—Å", "cr_2"),
        ("3Ô∏è‚É£–¢—Ä–µ—Ç–∏–π –∫—É—Ä—Å", "cr_3"),
        ("4Ô∏è‚É£–ß–µ—Ç–≤—ë—Ä—Ç—ã–π –∫—É—Ä—Å", "cr_4"),
        ("5Ô∏è‚É£–ü—è—Ç—ã–π –∫—É—Ä—Å", "cr_5"),
        ("üîÑ –ú–∞–≥–∏—Å—Ç—Ä–∞—Ç—É—Ä–∞/–ê—Å–ø–∏—Ä–∞–Ω—Ç—É—Ä–∞/–î—Ä—É–≥–æ–µ", "cr_cc"),
        button_text_back_to_faculty["ru"],
    ],
    "en": [
        ("1Ô∏è‚É£First year", "cr_1"),
        ("2Ô∏è‚É£Second year", "cr_2"),
        ("3Ô∏è‚É£Third year", "cr_3"),
        ("4Ô∏è‚É£Fourth year", "cr_4"),
        ("5Ô∏è‚É£Fifth year", "cr_5"),
        ("üîÑ Master's/PhD/Other", "cr_cc"),
        button_text_back_to_faculty["en"],
    ],
}
button_text_courses_ids: dict[str, int] = {
    key: i for i, (_, key) in enumerate(button_text_courses["ru"])
}

request_full_descr_text: dict[str, str] = {
    "ru": """üìù –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø–æ–¥—Ä–æ–±–Ω–æ –æ–ø–∏—à–∏ –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ —Å–≤–æ–µ–≥–æ –æ–±—Ä–∞—â–µ–Ω–∏—è. –í—Å–µ –¥–µ–ª–µ–≥–∞—Ç—ã –∏ –≤–æ–ª–æ–Ω—Ç—ë—Ä—ã –°—Ç—É–¥—Å–æ–≤–µ—Ç–∞ –ø–æ–¥–ø–∏—Å–∞–ª–∏ –°–æ–≥–ª–∞—à–µ–Ω–∏–µ –æ –ù–µ—Ä–∞–∑–≥–ª–∞—à–µ–Ω–∏–∏ –∏ –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É—é—Ç —Ç–≤–æ—é <strong>–∞–Ω–æ–Ω–∏–º–Ω–æ—Å—Ç—å</strong> (–µ—Å–ª–∏ —Ç—ã —É–∫–∞–∂–µ—à—å –æ –Ω–µ–π –≤ —Ç–≤–æ—ë–º –æ–±—Ä–∞—â–µ–Ω–∏–∏).

<strong>–í–∞–∂–Ω–æ!</strong> –ü—Ä–∏–∫–ª–∞–¥—ã–≤–∞–π —Å—Å—ã–ª–∫–∏ –Ω–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é—â–∏–µ –æ–ø–∏—Å—ã–≤–∞–µ–º—É—é —Å–∏—Ç—É–∞—Ü–∏—é –º–∞—Ç–µ—Ä–∏–∞–ª—ã (–æ–ø—Ä–æ—Å—ã, —Ñ–æ—Ç–æ, –≤–∏–¥–µ–æ, —Ç–æ—á–Ω—ã–µ –¥–∞—Ç—ã –∏ –≤—Ä–µ–º—è). –ö–æ–Ω–∫—Ä–µ—Ç–∏–∫–∞ –ø–æ–∑–≤–æ–ª–∏—Ç –Ω–∞–º —Ä–µ—à–∏—Ç—å —Ç–≤–æ–π –∑–∞–ø—Ä–æ—Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ. –ó–∞–≥—Ä—É–∑–∏—Ç—å –≤—Å—ë –º–æ–∂–Ω–æ –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞ –Ω–∞ <a href=\"https://disk.yandex.ru/client/disk\">–æ–¥–Ω—É –ø–∞–ø–∫—É –≤ –æ–±–ª–∞–∫–µ</a>, –Ω–µ –∑–∞–±—ã–≤ –æ—Ç–∫—Ä—ã—Ç—å –¥–æ—Å—Ç—É–ø –ø–æ —Å—Å—ã–ª–∫–µ.""",
    "en": """üìù Please, describe your problem in detail. If you wish to remain anonymous, state it in the body of your request. Don't worry, no-one will disclose information about you and your request since all the delegates and volunteers have signed the Non-Disclosure Agreement.

<strong>Note!</strong> We need you to attach materials (precise date when smth happened, photos, videos, polls etc.) that will help us with solving your problem. For convenience, create a folder using Google or Yandex drive and upload all of your files to it. Please, don't forget to make your folder accessible by link.""",
}

confirm_application_text: dict[str, str] = {
    "ru": """üëÄ –ü—Ä–æ–≤–µ—Ä—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö –∏ –Ω–∞–ª–∏—á–∏–µ –¥–æ—Å—Ç—É–ø–∞ –ø–æ —Å—Å—ã–ª–∫–µ –∫ –ø—Ä–∏–∫—Ä–µ–ø–ª—ë–Ω–Ω—ã–º –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º. –û–±—Ä–∞—â–µ–Ω–∏–µ –≤ –°—Ç—É–¥—Å–æ–≤–µ—Ç –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ —Å–ª–µ–¥—É—é—â–µ–º –≤–∏–¥–µ:

‚Äî‚Äî‚Äî‚Äî
{0}
‚Äî‚Äî‚Äî‚Äî""",
    "en": """üëÄ Please check the correctness of the data and the availability of access via the link to your attached materials. The appeal to the Student Council will be sent in the following form:

‚Äî‚Äî‚Äî‚Äî
{0}
‚Äî‚Äî‚Äî‚Äî""",
}

campus_or_dormitory_text: dict[str, str] = {
    "ru": "\n–û–±—â–µ–∂–∏—Ç–∏–µ –∏–ª–∏ –∫–æ—Ä–ø—É—Å –í–®–≠: ",
    "en": "\nHSE dormitory or campus: ",
}

faculty: dict[str, str] = {
    "ru": "\n–§–∞–∫—É–ª—å—Ç–µ—Ç: ",
    "en": "\nFaculty: ",
}

course: dict[str, str] = {
    "ru": "\n–ö—É—Ä—Å: ",
    "en": "\nCourse: ",
}

application_sent_text: dict[str, str] = {
    "ru": """<strong>–û–±—Ä–∞—â–µ–Ω–∏–µ –æ—Ç {0} (@{1}):</strong>

<strong>–¢–µ–º–∞: {2}{3}{4}</strong>

{5}""",
    "en": """<strong>Application from {0} (@{1}):</strong>

<strong>Topic: {2}{3}{4}</strong>

{5}""",
}

button_text_back_to_application: dict[str, tuple[str, str]] = {
    "ru": ("–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Å–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—é —Ç–µ–∫—Å—Ç–∞ –æ–±—Ä–∞—â–µ–Ω–∏—èüîô", "bck_to_apl_wrt"),
    "en": ("Back to the application text menuüîô", "bck_to_apl_wrt"),
}
button_text_approve_application: dict[str, tuple[str, str]] = {
    "ru": ("–û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ–±—Ä–∞—â–µ–Ω–∏–µ‚úÖ", "snd_appl"),
    "en": ("Send application‚úÖ", "snd_appl"),
}

reqest_registred_text: dict[str, str] = {
    "ru": """üéâ –ì–æ—Ç–æ–≤–æ! –¢–≤–æ–π –Ω–æ–º–µ—Ä –æ–±—Ä–∞—â–µ–Ω–∏—è:
{0}

–°—Ç—É–¥—Å–æ–≤–µ—Ç —Ä–∞—Å—Å–º–æ—Ç—Ä–∏—Ç –æ–±—Ä–∞—â–µ–Ω–∏–µ –∏ —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ —Ä–∞–±–æ—á–µ–π –Ω–µ–¥–µ–ª–∏.""",
    "en": """üéâ Done! Your application number:
{0}

The Student Council will consider the application and contact you within a working week.""",
}

unknown_user_text = "Errror: user is unknown"
unexpected_error_text = "Unexpected error"
